{"version":3,"file":"react-render-plugin.min.js","sources":["../src/utils.js","../src/Control.jsx","../src/Socket.jsx","../src/Node.jsx","../src/index.jsx"],"sourcesContent":["export function kebab(str) {\n    const replace = s => s.toLowerCase().replace(/ /g, '-');\n\n    return Array.isArray(str) ? str.map(replace) : replace(str);\n}","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nexport class Control extends React.Component {\n    createRef = el => {\n        const { innerRef, control } = this.props;\n    \n        el && innerRef(el, control);\n    };\n\n    render() {\n        const { className, control } = this.props;\n\n        return (\n            <div\n                className={className}\n                title={control.key}\n                ref={this.createRef}\n            />\n        )\n    }\n}","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { kebab } from './utils';\n\nexport class Socket extends React.Component {\n    createRef = el => {\n        const { innerRef, type, io } = this.props;\n    \n        el && innerRef(el, type, io);\n    };\n\n    render () {\n        const { socket, type } = this.props;\n\n        return (\n            <div\n                className={`socket ${type} ${kebab(socket.name)}`}\n                title={socket.name}\n                ref={el => this.createRef(el)} // force update for new IO with a same key \n            />\n        )\n    }\n}","/* eslint-disable sort-imports */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { kebab } from './utils';\nimport { Control } from './Control';\nimport { Socket } from './Socket';\nimport './styles.sass';\n\nexport class Node extends React.Component {\n    state = {}\n\n    static getDerivedStateFromProps({ node, editor }) {\n        return {\n            outputs: Array.from(node.outputs.values()),\n            controls: Array.from(node.controls.values()),\n            inputs: Array.from(node.inputs.values()),\n            selected: editor.selected.contains(node) ? 'selected' : ''\n        }\n    }\n    \n    render() {\n        const { node, bindSocket, bindControl } = this.props;\n        const { outputs, controls, inputs, selected } = this.state;\n\n        return (\n            <div className={`node ${selected} ${kebab(node.name)}`}>\n                <div className=\"title\">{node.name}</div>\n                {/* Outputs */}\n                {outputs.map((output) => (\n                    <div className=\"output\" key={output.key}>\n                        <div className=\"output-title\">{output.name}</div>\n                        <Socket type=\"output\" socket={output.socket} io={output} innerRef={bindSocket} />\n                    </div>\n                ))}\n                {/* Controls */}\n                {controls.map(control => (\n                    <Control className=\"control\" key={control.key} control={control} innerRef={bindControl} />\n                ))}\n                {/* Inputs */}\n                {inputs.map(input => (\n                    <div className=\"input\" key={input.key}>\n                        <Socket type=\"input\" socket={input.socket} io={input} innerRef={bindSocket} />\n                        {!input.showControl() && <div className=\"input-title\">{input.name}</div>}\n                        {input.showControl() && <Control className=\"input-control\" control={input.control} innerRef={bindControl} />}\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Node } from './Node';\n\nfunction install(editor, { component: NodeComponent = Node }) {\n    editor.on('rendernode', ({ el, node, component, bindSocket, bindControl }) => {\n        if (component.render && component.render !== 'react') return;\n        const Component = component.component || NodeComponent;\n\n        node.update = () => new Promise((res) => {\n            ReactDOM.render(<Component node={node} editor={editor} bindSocket={bindSocket} bindControl={bindControl} />, el, res)\n        });\n        node._reactComponent = true;\n        node.update();\n    });\n\n    editor.on('rendercontrol', ({ el, control }) => {\n        if (control.render && control.render !== 'react') return;\n        const Component = control.component;\n\n        control.update = () => new Promise((res) => {\n            ReactDOM.render(<Component {...control.props} />, el, res)\n        });\n        control.update();\n    });\n\n    editor.on('connectioncreated connectionremoved', connection => {\n        connection.output.node.update();\n        connection.input.node.update();\n    });\n\n    editor.on('nodeselected', () => {\n        editor.nodes.filter(n => n._reactComponent).map(node => node.update());\n    });\n}\n\nexport { Node } from './Node';\nexport { Socket } from './Socket';\nexport { Control } from './Control';\n\nexport default {\n    name: 'react-render',\n    install\n}"],"names":["kebab","str","replace","s","toLowerCase","Array","isArray","map","Control","el","_this","props","innerRef","control","React","Component","this","className","title","key","ref","createRef","Socket","type","io","socket","name","_this2","Node","node","bindSocket","bindControl","state","outputs","controls","inputs","selected","output","input","showControl","editor","from","values","contains","install","component","NodeComponent","on","render","update","Promise","res","ReactDOM","_reactComponent","connection","nodes","filter","n"],"mappings":"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"}